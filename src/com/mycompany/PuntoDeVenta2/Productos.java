
package com.mycompany.PuntoDeVenta2;

//import java.awt.*;
//import java.awt.event.*;
import java.io.*;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author VICTECH
 */
public class Productos extends javax.swing.JPanel {

    /**
     * Creates new form Productos
     */
    public Productos() {
        initComponents();
    }

//////////////////////////////////////////////////////
    
private void eliminarProductoDeArchivo(String codigoEliminar) { // Método para eliminar un producto del archivo
    File archivoOriginal = new File("Inventario.txt"); // Archivo original de inventario
    File archivoTemporal = new File("Inventario_temp.txt"); // Archivo temporal para los cambios

    try (BufferedReader br = new BufferedReader(new FileReader(archivoOriginal)); 
         PrintWriter pw = new PrintWriter(new FileWriter(archivoTemporal))) { // Leer el archivo original y preparar el archivo temporal

        String linea;
        while ((linea = br.readLine()) != null) { // Leer cada línea del archivo original
            String[] datos = linea.split(","); // Dividir datos por comas
            if (!datos[0].equals(codigoEliminar)) { // Verificar si el código no coincide con el producto a eliminar
                pw.println(linea); // Copiar línea al archivo temporal
            }
        }
    } catch (Exception e) { // Manejar cualquier error
        JOptionPane.showMessageDialog(this, "Error al eliminar el producto: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE); // Mostrar mensaje de error
    }

    if (archivoOriginal.delete()) { // Intentar eliminar el archivo original
        archivoTemporal.renameTo(archivoOriginal); // Renombrar el archivo temporal como el original
    } else { 
        JOptionPane.showMessageDialog(this, "Error al actualizar el archivo de inventario.", "Error", JOptionPane.ERROR_MESSAGE); // Mostrar error si no se actualiza
    }
}
    
////////////////////////////////////////////////////////
    
private boolean productoExiste(String codigoBarras, String nombreProducto) { // Método para verificar si un producto existe
    try (BufferedReader br = new BufferedReader(new FileReader("Inventario.txt"))) { // Abrir el archivo "Inventario.txt" para lectura
        String linea;
        while ((linea = br.readLine()) != null) { // Leer cada línea del archivo
            String[] datos = linea.split(","); // Dividir datos de la línea por comas
            if (datos.length == 4) { // Verificar que la línea tenga los datos esperados
                String codigoExistente = datos[0].trim(); // Obtener y eliminar espacios en el código
                String nombreExistente = datos[1].trim(); // Obtener y eliminar espacios en el nombre

                if (codigoExistente.equalsIgnoreCase(codigoBarras) || nombreExistente.equalsIgnoreCase(nombreProducto)) { // Comparar ignorando mayúsculas/minúsculas
                    return true; // Retornar verdadero si el producto existe
                }
            }
        }
    } catch (Exception e) { // Manejar cualquier error
        JOptionPane.showMessageDialog(this, "Error al verificar los productos existentes: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE); // Mostrar mensaje de error
    }
    return false; // Retornar falso si el producto no existe
}

///////////////////////////////////////////////////////////////
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Productos = new javax.swing.JPanel();
        JPanelFondoAmarillo = new javax.swing.JPanel();
        jLabelProductos = new javax.swing.JLabel();
        JPanelFondoGris = new javax.swing.JPanel();
        jButtonNuevo = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jLabelProductos1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jTextField3 = new javax.swing.JTextField();

        Productos.setBackground(new java.awt.Color(255, 255, 255));
        Productos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JPanelFondoAmarillo.setBackground(new java.awt.Color(255, 225, 0));

        jLabelProductos.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelProductos.setForeground(new java.awt.Color(255, 255, 255));
        jLabelProductos.setText("PRODUCTOS");

        javax.swing.GroupLayout JPanelFondoAmarilloLayout = new javax.swing.GroupLayout(JPanelFondoAmarillo);
        JPanelFondoAmarillo.setLayout(JPanelFondoAmarilloLayout);
        JPanelFondoAmarilloLayout.setHorizontalGroup(
            JPanelFondoAmarilloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelFondoAmarilloLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabelProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(746, Short.MAX_VALUE))
        );
        JPanelFondoAmarilloLayout.setVerticalGroup(
            JPanelFondoAmarilloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelFondoAmarilloLayout.createSequentialGroup()
                .addComponent(jLabelProductos)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Productos.add(JPanelFondoAmarillo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 40));

        JPanelFondoGris.setBackground(new java.awt.Color(204, 204, 204));

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPanelFondoGrisLayout = new javax.swing.GroupLayout(JPanelFondoGris);
        JPanelFondoGris.setLayout(JPanelFondoGrisLayout);
        JPanelFondoGrisLayout.setHorizontalGroup(
            JPanelFondoGrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1440, Short.MAX_VALUE)
            .addGroup(JPanelFondoGrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JPanelFondoGrisLayout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1247, Short.MAX_VALUE)))
            .addGroup(JPanelFondoGrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JPanelFondoGrisLayout.createSequentialGroup()
                    .addGap(226, 226, 226)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1063, Short.MAX_VALUE)))
        );
        JPanelFondoGrisLayout.setVerticalGroup(
            JPanelFondoGrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(JPanelFondoGrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JPanelFondoGrisLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButtonNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(JPanelFondoGrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JPanelFondoGrisLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        Productos.add(JPanelFondoGris, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));

        jLabelProductos1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelProductos1.setForeground(new java.awt.Color(255, 225, 0));
        jLabelProductos1.setText("NUEVO PRODUCTO");
        Productos.add(jLabelProductos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 647, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Precio Venta");
        Productos.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        Productos.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 380, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Codigo de Barras");
        Productos.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        jRadioButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButton2.setText("Por Unidad/Pza");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        Productos.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Se vende");
        Productos.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        Productos.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 360, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Nombre del Producto");
        Productos.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Cantidad Stock");
        Productos.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel9.setText("$");
        Productos.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 30, 30));
        Productos.add(jSpinner3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 110, 30));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        Productos.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 110, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Productos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Productos, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
    try {
        // Obtener los datos ingresados
        String codigoBarras = jTextField1.getText().trim(); // Código de barras
        String nombreProducto = jTextField2.getText().trim(); // Nombre del producto
        String precioVentaTexto = jTextField3.getText().trim(); // Precio de venta desde el JTextField
        Object cantidadStockObj = jSpinner3.getValue(); // Spinner para la cantidad de stock

        // Validar campos vacíos
        if (codigoBarras.isEmpty() || nombreProducto.isEmpty() || precioVentaTexto.isEmpty() || cantidadStockObj == null) {
            JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos antes de añadir el producto.", "Campos incompletos", JOptionPane.WARNING_MESSAGE); // Mensaje de advertencia
            return; // Salir si hay campos incompletos
        }

        // Validar que el precio de venta sea un número decimal válido
        double precioVenta;
        try {
            precioVenta = Double.parseDouble(precioVentaTexto); // Convertir texto a número decimal
            if (precioVenta < 0) {
                JOptionPane.showMessageDialog(this, "El precio de venta no puede ser negativo.", "Valor inválido", JOptionPane.ERROR_MESSAGE); // Mensaje de error
                return; // Salir si el precio es negativo
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, introduce un valor decimal válido para el precio de venta.", "Valor inválido", JOptionPane.ERROR_MESSAGE); // Mensaje de error
            return; // Salir si el texto no es un número válido
        }

        // Validar que la cantidad de stock sea un entero válido
        int cantidadStock;
        try {
            cantidadStock = Integer.parseInt(cantidadStockObj.toString()); // Convertir texto a número entero
            if (cantidadStock < 0) {
                JOptionPane.showMessageDialog(this, "La cantidad de stock no puede ser negativa.", "Valor inválido", JOptionPane.ERROR_MESSAGE); // Mensaje de error
                return; // Salir si la cantidad es negativa
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, introduce un valor numérico válido para la cantidad de stock.", "Valor inválido", JOptionPane.ERROR_MESSAGE); // Mensaje de error
            return; // Salir si el texto no es un número válido
        }

        // Verificar si el producto ya existe en el archivo
        if (productoExiste(codigoBarras, nombreProducto)) { // Método que verifica duplicados
            JOptionPane.showMessageDialog(this, "Ya existe un producto con el mismo código de barras o nombre.", "Producto duplicado", JOptionPane.WARNING_MESSAGE); // Mensaje de advertencia
            return; // Salir si el producto ya existe
        }

        // Agregar el nuevo producto al archivo
        try (PrintWriter pw = new PrintWriter(new FileWriter("Inventario.txt", true))) { // Abrir archivo en modo añadir
            pw.println(codigoBarras + "," + nombreProducto + "," + precioVenta + "," + cantidadStock); // Escribir datos del producto en una nueva línea
            JOptionPane.showMessageDialog(this, "Producto añadido con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE); // Mensaje de éxito
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al añadir el producto: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE); // Manejar errores al escribir
            return; // Salir si ocurre un error
        }

        // Limpiar los campos para ingresar otro producto
        jTextField1.setText(""); // Limpiar campo del código de barras
        jTextField2.setText(""); // Limpiar campo del nombre del producto
        jTextField3.setText(""); // Limpiar campo del precio
        jSpinner3.setValue(0); // Reiniciar spinner de stock

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE); // Mostrar mensaje para errores inesperados
    }
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
    // Obtener la ventana principal desde el JPanel
    JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);

    // Crear el JDialog sin AWT
    JDialog dialogoEliminar = new JDialog(parentFrame, "Eliminar Producto", true);
    dialogoEliminar.setSize(600, 400);

    // Panel principal con GroupLayout
    JPanel panel = new JPanel();
    GroupLayout layout = new GroupLayout(panel);
    panel.setLayout(layout);
    layout.setAutoCreateGaps(true);
    layout.setAutoCreateContainerGaps(true);

    // Barra de búsqueda
    JLabel lblBuscar = new JLabel("Buscar:");
    JTextField txtBuscar = new JTextField(20);

    // Modelo y tabla para mostrar los productos
    DefaultTableModel modeloEliminar = new DefaultTableModel(new String[]{"Código", "Nombre", "Precio", "Cantidad"}, 0);
    JTable tablaEliminar = new JTable(modeloEliminar);
    JScrollPane scrollTabla = new JScrollPane(tablaEliminar);

    // Leer datos del archivo y llenar la tabla
    try (BufferedReader br = new BufferedReader(new FileReader("Inventario.txt"))) {
        String linea;
        while ((linea = br.readLine()) != null) {
            String[] datos = linea.split(",");
            if (datos.length == 4) {
                String codigo = datos[0];
                String nombre = datos[1];
                double precio = Double.parseDouble(datos[2]);
                int cantidad = Integer.parseInt(datos[3]);
                modeloEliminar.addRow(new Object[]{codigo, nombre, precio, cantidad});
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al leer los productos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Botones eliminando AWT completamente
    JButton btnEliminar = new JButton("Eliminar");
    JButton btnCancelar = new JButton("Cancelar");

    // Filtrar la tabla en tiempo real usando **DocumentListener** en lugar de KeyAdapter
    txtBuscar.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            filtrarTabla();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            filtrarTabla();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            filtrarTabla();
        }

        private void filtrarTabla() {
            String textoBusqueda = txtBuscar.getText().trim().toLowerCase();
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modeloEliminar);
            tablaEliminar.setRowSorter(sorter);
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda));
        }
    });

    // Acción para eliminar el producto seleccionado
    btnEliminar.addActionListener(e -> {
        int filaSeleccionada = tablaEliminar.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(dialogoEliminar,
                "¿Estás seguro de que deseas eliminar este producto?",
                "Confirmar Eliminación",
                JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                String codigoEliminar = tablaEliminar.getValueAt(filaSeleccionada, 0).toString();
                eliminarProductoDeArchivo(codigoEliminar);
                modeloEliminar.removeRow(filaSeleccionada);
                JOptionPane.showMessageDialog(dialogoEliminar, "Producto eliminado con éxito.");
            }
        } else {
            JOptionPane.showMessageDialog(dialogoEliminar, "Por favor, selecciona un producto para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    });

    // Acción del botón "Cancelar"
    btnCancelar.addActionListener(e -> dialogoEliminar.dispose());

    // Configurar GroupLayout para distribuir correctamente los elementos
    layout.setHorizontalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblBuscar)
                .addComponent(txtBuscar))
            .addComponent(scrollTabla)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnCancelar)
                .addGap(20)
                .addComponent(btnEliminar))
    );

    layout.setVerticalGroup(
        layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(lblBuscar)
                .addComponent(txtBuscar))
            .addComponent(scrollTabla)
            .addGap(20)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(btnCancelar)
                .addComponent(btnEliminar))
    );

    // Agregar el panel al diálogo
    dialogoEliminar.add(panel);
    dialogoEliminar.setLocationRelativeTo(parentFrame);
    dialogoEliminar.setVisible(true);
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelFondoAmarillo;
    private javax.swing.JPanel JPanelFondoGris;
    private javax.swing.JPanel Productos;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelProductos;
    private javax.swing.JLabel jLabelProductos1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
